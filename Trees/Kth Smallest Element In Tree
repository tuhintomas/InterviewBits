Given a binary search tree, write a function to find the kth smallest element in the tree.

Example :

Input : 
  2
 / \
1   3

and k = 2

Return : 2

As 2 is the second smallest element in the tree.
 NOTE : You may assume 1 <= k <= Total number of nodes in BST 
 
 
 
 
 
 class Solution:
    # @param A : root node of tree
    # @param B : integer
    # @return an integer
    def kthsmallest(self, A, B):
        if A==None:
            return None
        l=[]
        self.helper(A,l)
        return l[B-1]
    def helper(self,root,l):
        if root==None:
            return
        self.helper(root.left,l)
        l.append(root.val)
        self.helper(root.right,l)
