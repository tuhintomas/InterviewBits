Given a non-negative number represented as an array of digits,

add 1 to the number ( increment the number represented by the digits ).

The digits are stored such that the most significant digit is at the head of the list.

Example:

If the vector has [1, 2, 3]

the returned vector should be [1, 2, 4]

as 123 + 1 = 124.

 NOTE: Certain things are intentionally left unclear in this question which you should practice asking the interviewer.
For example, for this problem, following are some good questions to ask :
Q : Can the input have 0’s before the most significant digit. Or in other words, is 0 1 2 3 a valid input?
A : For the purpose of this question, YES
Q : Can the output have 0’s before the most significant digit? Or in other words, is 0 1 2 4 a valid output?
A : For the purpose of this question, NO. Even if the input has zeroes before the most significant digit.



vector<int> Solution::plusOne(vector<int> &A) {
    int n=A.size();
    vector<int> res;
    if(n==0){
        res.push_back(1);
        return res;
    }
    int val=0,carry=1;
    for(int i=n-1;i>=0;i--){
        val=A[i]+carry;
        res.push_back(val%10);
        carry=val/10;
    }
    if (carry>0){
        res.push_back(carry);
    }
    reverse(res.begin(),res.end());
    while (res[0]==0){
        res.erase(res.begin());
    }
    return res;
}
